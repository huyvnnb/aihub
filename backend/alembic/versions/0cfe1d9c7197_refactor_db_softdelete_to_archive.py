"""refactor db: softdelete to archive

Revision ID: 0cfe1d9c7197
Revises: 183d218320f8
Create Date: 2025-06-25 16:23:22.209872

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0cfe1d9c7197'
down_revision: Union[str, None] = '183d218320f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    gender_enum = postgresql.ENUM('MALE', 'FEMALE', name='gender', create_type=False)
    gender_enum.create(op.get_bind(), checkfirst=True)

    op.create_table('deleted_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('module', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deleted_permissions_name'), 'deleted_permissions', ['name'], unique=False)
    op.create_index(op.f('ix_deleted_permissions_original_id'), 'deleted_permissions', ['original_id'], unique=False)

    op.create_table('deleted_role_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_role_id', sa.Integer(), nullable=False),
    sa.Column('original_permission_id', sa.Integer(), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deleted_role_permission_original_permission_id'), 'deleted_role_permission', ['original_permission_id'], unique=False)
    op.create_index(op.f('ix_deleted_role_permission_original_role_id'), 'deleted_role_permission', ['original_role_id'], unique=False)

    op.create_table('deleted_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deleted_roles_name'), 'deleted_roles', ['name'], unique=False)
    op.create_index(op.f('ix_deleted_roles_original_id'), 'deleted_roles', ['original_id'], unique=False)

    op.create_table('deleted_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Uuid(), nullable=False),
    sa.Column('archived_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('provider_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('gender', gender_enum, nullable=True),
    sa.Column('avatar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('verify_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('verify_token_expire', sa.DateTime(), nullable=True),
    sa.Column('pwd_reset_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pwd_reset_expire', sa.DateTime(), nullable=True),
    sa.Column('archived_role_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deleted_users_email'), 'deleted_users', ['email'], unique=False)
    op.create_index(op.f('ix_deleted_users_original_id'), 'deleted_users', ['original_id'], unique=False)

    op.alter_column('permissions', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=False, start=10000),
               existing_nullable=False,
               autoincrement=True)
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.drop_column('permissions', 'deleted')
    op.drop_column('permissions', 'deleted_at')
    op.alter_column('refresh_tokens', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=False, start=10000),
               existing_nullable=False,
               autoincrement=True)
    op.create_index(op.f('ix_refresh_tokens_id'), 'refresh_tokens', ['id'], unique=False)
    op.drop_column('refresh_tokens', 'deleted')
    op.drop_column('refresh_tokens', 'deleted_at')
    op.alter_column('role_permission', 'role_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('role_permission', 'permission_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.drop_constraint('fk_role_permission_permission_id', 'role_permission', type_='foreignkey')
    op.drop_constraint('fk_role_permission_role_id', 'role_permission', type_='foreignkey')
    op.create_foreign_key(None, 'role_permission', 'permissions', ['permission_id'], ['id'])
    op.create_foreign_key(None, 'role_permission', 'roles', ['role_id'], ['id'])
    op.alter_column('roles', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=False, start=10000),
               existing_nullable=False,
               autoincrement=True)
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.drop_column('roles', 'deleted')
    op.drop_column('roles', 'deleted_at')
    op.add_column('users', sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(), nullable=False, server_default='local'))
    op.add_column('users', sa.Column('provider_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('pwd_reset_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('pwd_reset_expire', sa.DateTime(), nullable=True))
    op.alter_column('users', 'dob',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('users', 'avatar',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'role_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.drop_column('users', 'deleted')
    op.drop_column('users', 'deleted_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.alter_column('users', 'role_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('users', 'avatar',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'dob',
               existing_type=sa.DATE(),
               nullable=False)
    op.drop_column('users', 'pwd_reset_expire')
    op.drop_column('users', 'pwd_reset_token')
    op.drop_column('users', 'provider_id')
    op.drop_column('users', 'provider')
    op.add_column('roles', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('roles', sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.alter_column('roles', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=10000, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'role_permission', type_='foreignkey')
    op.drop_constraint(None, 'role_permission', type_='foreignkey')
    op.create_foreign_key('fk_role_permission_role_id', 'role_permission', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_role_permission_permission_id', 'role_permission', 'permissions', ['permission_id'], ['id'], ondelete='CASCADE')
    op.alter_column('role_permission', 'permission_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('role_permission', 'role_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.add_column('refresh_tokens', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('refresh_tokens', sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_refresh_tokens_id'), table_name='refresh_tokens')
    op.alter_column('refresh_tokens', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=10000, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('permissions', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('permissions', sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.alter_column('permissions', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=10000, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.drop_index(op.f('ix_deleted_users_original_id'), table_name='deleted_users')
    op.drop_index(op.f('ix_deleted_users_email'), table_name='deleted_users')
    op.drop_table('deleted_users')
    op.drop_index(op.f('ix_deleted_roles_original_id'), table_name='deleted_roles')
    op.drop_index(op.f('ix_deleted_roles_name'), table_name='deleted_roles')
    op.drop_table('deleted_roles')
    op.drop_index(op.f('ix_deleted_role_permission_original_role_id'), table_name='deleted_role_permission')
    op.drop_index(op.f('ix_deleted_role_permission_original_permission_id'), table_name='deleted_role_permission')
    op.drop_table('deleted_role_permission')
    op.drop_index(op.f('ix_deleted_permissions_original_id'), table_name='deleted_permissions')
    op.drop_index(op.f('ix_deleted_permissions_name'), table_name='deleted_permissions')
    op.drop_table('deleted_permissions')
    # ### end Alembic commands ###
